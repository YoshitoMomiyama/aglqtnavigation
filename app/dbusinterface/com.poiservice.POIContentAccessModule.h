/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp poi_contentaccessmodule.xml -p com.poiservice.POIContentAccessModule -a POIContentAccessModule_adapter
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef COM_POISERVICE_POICONTENTACCESSMODULE_H
#define COM_POISERVICE_POICONTENTACCESSMODULE_H

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface com.poiservice.POIContentAccessModule
 */
class ComPoiservicePOIContentAccessModuleInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "com.poiservice.POIContentAccessModule"; }

public:
    ComPoiservicePOIContentAccessModuleInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = nullptr);

    ~ComPoiservicePOIContentAccessModuleInterface();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<> addPOI(uint category_id, double poi_Lat, double poi_Lon)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(category_id) << QVariant::fromValue(poi_Lat) << QVariant::fromValue(poi_Lon);
        return asyncCallWithArgumentList(QStringLiteral("addPOI"), argumentList);
    }

    inline QDBusPendingReply<> removePOIs(uint category_id)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(category_id);
        return asyncCallWithArgumentList(QStringLiteral("removePOIs"), argumentList);
    }

Q_SIGNALS: // SIGNALS
};

namespace com {
  namespace poiservice {
    typedef ::ComPoiservicePOIContentAccessModuleInterface POIContentAccessModule;
  }
}
#endif
